import numpy as np
import matplotlib.pyplot as plt
from scipy import signal

k = 1
Qmax = 20
Qmin = 1
dq = 1
q = np.arange(Qmin, Qmax + dq, dq)
df = 1/100
f0 = 5000
fmax = 10000
fmin = 1000
f = np.arange(fmin, fmax, df)

H = np.zeros((len(f), (len(q))), dtype = complex)

for x in range(0, (len(q))):
    H[:, x] = -k/(1 + 1j * q[x] * (f/f0 - f0/f))

Hz = 1000                                                         #changable
Periode = 1 / Hz
dt = Periode / 1000
debut = 0
fin = Periode-dt
difference = fin - debut

CAR = np.arange(debut, fin, dt)
CARRER = 5*signal.square(2*np.pi*CAR*Hz, duty=0.5)+5

W0 = Hz*2*np.pi                                              #changable
t = np.arange(0, Periode-dt, dt)
num = 6                                                   #changable

A1 = np.zeros((num-1, int(Periode/dt)), dtype=complex)

for k in range(1, num):
    A1[k-1,:] = np.exp(-1j*k*W0*t)

A2_pos = np.zeros(num-1, dtype=complex)
A2_0 = np.zeros(1, dtype=complex)

A2_0 = (1 / Periode) * np.sum(CARRER) * dt

for k in range(1, num):
    A2_pos[k-1] = (1/Periode) * np.sum(CARRER * A1[k-1]) * dt

A2_neg = np.zeros(num-1, dtype=complex)
A2_neg = np.conj(A2_pos)
A2_neg = A2_neg[::-1]

A2 = np.hstack((A2_neg, A2_0, A2_pos))

plt.figure()
a = plt.subplot(1, 1, 1)
plt.figure()
b = plt.subplot(1, 1, 1)
plt.figure()
c = plt.subplot(1, 1, 1)

a.plot(CAR, CARRER)
a.set_title("Onde carree en entree")
a.grid(color='b', linestyle='-', linewidth=0.1)
a.set_ylabel('Amplitude')
a.set_xlabel('Temps (s)')

b.stem(range(-num+1, num), np.abs(A2))
b.set_title("Spectre de Fourier")
b.grid(color='b', linestyle='-', linewidth=0.1)
b.set_ylabel('Amplitude (V)')
b.set_xlabel('Harmonique (k)')

c.stem(range(-num+1, num), np.angle(A2))
c.set_title("Spectre de Fourier")
c.grid(color='b', linestyle='-', linewidth=0.1)
c.set_ylabel('Phase (rad)')
c.set_xlabel('Harmonique (k)')

plt.figure()
a = plt.subplot(2, 1, 1)
b = plt.subplot(2, 1, 2)
a.semilogx(f, 20*np.log10(np.abs(H[:,range(1, 15, 2)])), color = 'black')
a.semilogx(f, 20*np.log10(np.abs(H[:,12-1])), color = 'red')
a.set_title("Lieux de Bode")
a.set_ylabel('Gain (dB)')
a.set_xlabel('frequence (Hz)')
b.semilogx(f, 20*np.log10(np.abs(H[:,12-1])), color = 'red')
b.set_ylabel('Gain (dB)')
b.set_xlabel('frequence (Hz)')

plt.show()